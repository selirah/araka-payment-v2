1. LOGIN
 /login

Request
-------
POST
{
  EmailAddress: string;
  Password: string;
}

Response
--------
{
  name: string;
  token: string;
  username: string;
  phoneNumber: string;
  emailAddress: string;
  isBusiness: boolean;
  userId: number;
}

2. REGISTER
/login/register

Request
-------
POST
{
  Name: string;
  PhoneNumber: string;
  EmailAddress: string;
  Password: string;
  IsBusiness: boolean;
}

Response
--------
{
  name: string;
  token: string;
  username: string;
  phoneNumber: string;
  emailAddress: string;
  isBusiness: boolean;
  userId: number;
}

3. VERIFICATION
/login/verifyaccount

Request
-------
POST
{
  ProcessId: string;
}

Response
--------
{
  processId: string;
  emailAddress: string;
}

4. FORGOTTEN PASSWORD
/login/requestpasswordreset

Request
-------
POST
{
  EmailAddress: string;
}

Response
--------
{
  200
}


5. RESET PASSWORD
/login/resetpassword

Request
-------
POST
{
  Password: string;
  ProcessId: string;
}

Response
--------
{
  200
}


6. FETCH PRODUCT CATEGORIES
/payments/productcategories

GET
Response
--------
{
  [
    {
      productCategoryId: number;
      name: string;
      image: string;
      merchants: null;
      products: [
        {
          productId: number;
          name: string;
          createdWhen: string;
          productCategoryId: number;
          image?: string;
          form: any;
          guid: string;
        }
      ];
    }
  ]
}


7. PROCESS PAYMENT REQUEST
/payments/processrequest
Request
-------
POST
{
  data: any (from formio),
  metadata: any (from formio),
  isValid: boolean
}

Response
--------
{
  operation: string;
  status: string;
  order: {
    orderID: string;
    sessionID: string;
    url: string;
    orderURL: string;
  };
}


8. REQUEST PAYMENT FEE
/payments/getfees

Request
-------
POST
{
  data: any (from formio),
  metadata: any (from formio),
  isValid: boolean
}

Response
--------
{
  fee: number;
  vat: number;
}

9. REQUEST TRANSACTION HISTORY
/payments/transactionhistory

Request
-------
GET


Response
--------
{
  transactionId: number;
  createdAt: string;
  amountPaid: number;
  transactionDescription: string;
  charge: number;
  vat: number;
  status: string;
  transactionDetails: {
    data?: any;
  };
}

10. REQUEST USER DETAILS
/payments/clientdetails/{userId}

Request
-------
GET


Response
--------
{
  clientId: number;
  fullName: string;
  firstName: string;
  otherName: string;
  lastName: string;
  dateOfBirth: string;
  address: string;
  email: string;
  country: string;
  city: string;
  phoneNumber: string;
  userId: number;
  user?: any;
}

11. UPDATE USER DETAILS
/payments/clientdetails

Request
-------
POST
{
  clientId: number;
  fullName: string;
  firstName: string;
  otherName: string;
  lastName: string;
  dateOfBirth: string;
  address: string;
  email: string;
  country: string;
  city: string;
  phoneNumber: string;
  userId: number;
  user?: any;
}


Response
--------
{
  clientId: number;
  fullName: string;
  firstName: string;
  otherName: string;
  lastName: string;
  dateOfBirth: string;
  address: string;
  email: string;
  country: string;
  city: string;
  phoneNumber: string;
  userId: number;
  user?: any;
}


12. ADD BENEFICIARY
/payments/addbeneficiary

Request
-------
POST
{
  beneficiaryId: number;
  name: string;
  phoneNumber?: string;
  studentId?: string;
  email?: string;
  bankAccount?: string;
  additionalInfo?: string;
  userId: number;
}


Response
--------
{
  beneficiaryId: number;
  name: string;
  phoneNumber?: string;
  studentId?: string;
  email?: string;
  bankAccount?: string;
  additionalInfo?: string;
  userId: number;
}


13. UPDATE BENEFICIARY
/payments/updatebeneficiary

Request
-------
POST
{
  beneficiaryId: number;
  name: string;
  phoneNumber?: string;
  studentId?: string;
  email?: string;
  bankAccount?: string;
  additionalInfo?: string;
  userId: number;
}


Response
--------
{
  beneficiaryId: number;
  name: string;
  phoneNumber?: string;
  studentId?: string;
  email?: string;
  bankAccount?: string;
  additionalInfo?: string;
  userId: number;
}


14. GET BENEFICIARIES
/payments/beneficiaries/{userId}

Request
-------
GET


Response
--------
[
  {
  beneficiaryId: number;
  name: string;
  phoneNumber?: string;
  studentId?: string;
  email?: string;
  bankAccount?: string;
  additionalInfo?: string;
  userId: number;
}
]

15. DELETE BENEFICIARY
/payments/deletebeneficiary

Request
-------
POST
{
  beneficiaryId: number;
}


Response
--------
200


16. DOWNLOAD RECEIPT
/payments/gettransactionreciept/{transactionId}

Request
-------
GET

Response
--------
{
  fileContents: string;
  contentType: string;
  fileDownloadName: string;
  lastModified: null;
  entityTag: null;
  enableRangeProcessing: boolean;
}