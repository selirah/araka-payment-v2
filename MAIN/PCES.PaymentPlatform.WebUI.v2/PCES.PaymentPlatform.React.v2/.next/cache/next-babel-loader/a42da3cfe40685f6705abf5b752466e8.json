{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Projects\\\\PCES\\\\Araka\\\\araka-payments\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'font-awesome/css/font-awesome.min.css';\n// import 'flag-icon-css/css/flag-icon.min.css';\n// import 'antd/dist/antd.css';\nif (true) {\n  require('font-awesome');\n\n  require('flag-icon-css');\n\n  require('jquery');\n\n  require('@popperjs/core');\n\n  require('bootstrap');\n\n  require('antd');\n}\n\nimport '../public/css/styles.css';\nimport '../public/css/mobiriseicons.css';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext: AppContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/Projects/PCES/Araka/araka-payments/pages/_app.tsx"],"names":["require","MyApp","Component","pageProps"],"mappings":";;;;;AACA;AACA;AACA;AACA;AAEA,UAAmC;AACjCA,EAAAA,OAAO,CAAC,cAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,eAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,QAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,gBAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,WAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,MAAD,CAAP;AACD;;AACD,OAAO,0BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,KAAT,OAAmD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AACjD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KAdSF,K;AAgBT,eAAeA,KAAf","sourcesContent":["import type { AppProps /*, AppContext */ } from 'next/app';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'font-awesome/css/font-awesome.min.css';\r\n// import 'flag-icon-css/css/flag-icon.min.css';\r\n// import 'antd/dist/antd.css';\r\n\r\nif (typeof window !== 'undefined') {\r\n  require('font-awesome');\r\n  require('flag-icon-css');\r\n  require('jquery');\r\n  require('@popperjs/core');\r\n  require('bootstrap');\r\n  require('antd');\r\n}\r\nimport '../public/css/styles.css';\r\nimport '../public/css/mobiriseicons.css';\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />;\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext: AppContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}