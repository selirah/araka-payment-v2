{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Projects\\\\PCES\\\\Araka\\\\araka-payments\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'flag-icon-css/css/flag-icon.min.css';\nimport 'antd/dist/antd.css';\nimport 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@popperjs/core';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext: AppContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/Projects/PCES/Araka/araka-payments/pages/_app.tsx"],"names":["MyApp","Component","pageProps"],"mappings":";;;;AACA,OAAO,sCAAP;AACA,OAAO,uCAAP;AACA,OAAO,qCAAP;AACA,OAAO,oBAAP;AACA,OAAO,QAAP;AACA,OAAO,wCAAP;AACA,OAAO,gBAAP;;AAEA,SAASA,KAAT,OAAmD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AACjD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KAdSF,K;AAgBT,eAAeA,KAAf","sourcesContent":["import type { AppProps /*, AppContext */ } from 'next/app';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'flag-icon-css/css/flag-icon.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'jquery';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@popperjs/core';\r\n\r\nfunction MyApp({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />;\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext: AppContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}